---
import { RectangleEllipsisIcon } from "lucide-react";
import Button from "../ui/Button.astro";

type Props = {
  /**
   * String to replace. Must be a full span including this text. E.g. `"generate-secret"`.
   */
  target: string;
};

const { target } = Astro.props;
---

<Button
  as="button"
  class="w-fit"
  variant="outline"
  data-component="GenerateSecretButton"
  data-target={target}
>
  <RectangleEllipsisIcon />Generate a secret</Button
>

<script is:inline>
  function generateSecret(length = 32) {
    const charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    let secret = "";
    for (let i = 0; i < length; i++) {
      secret += charset[Math.floor(Math.random() * charset.length)];
    }
    return secret;
  }

  (() => {
    document.querySelectorAll('[data-component="GenerateSecretButton"]').forEach((button) => {
      button.addEventListener("click", () => {
        console.log(`GenerateSecretButton clicked`);

        // Get target text
        const target = button.getAttribute("data-target");
        if (!target) return;

        // Get target span
        const spans = document.querySelectorAll(
          `figure > pre > code > div.ec-line > div.code > span`
        );
        const targetSpan = [...spans].find((span) => span.innerText.trim() === target);
        if (!targetSpan) return;

        // Generate secret
        const secret = generateSecret();

        // Replace target text with secret
        const newText = targetSpan.innerText.replace(target, secret);
        targetSpan.innerText = newText;

        // Replace button target with secret to enable regeneration
        button.setAttribute("data-target", secret);
      });
    });
  })();
</script>
