---
import { cn } from "@/utils/cn";
import type { Polymorphic } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

export const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 cursor-pointer disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-fg text-bg hover:bg-fg/80",
        outline: "border border-slate-200 dark:border-slate-700 hover:bg-fg/5",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

type Props<Tag extends "button" | "a"> = Polymorphic<{ as: Tag }> &
  VariantProps<typeof buttonVariants>;

const { as: Tag, variant, size, class: className, ...props } = Astro.props;
---

<Tag {...props} className={cn(buttonVariants({ variant, size, className }))}>
  <slot />
</Tag>
