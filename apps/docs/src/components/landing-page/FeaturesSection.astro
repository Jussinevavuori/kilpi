---
import {
  BicepsFlexedIcon,
  BlocksIcon,
  BrainCircuitIcon,
  ComponentIcon,
  LaptopIcon,
  ParenthesesIcon,
  PuzzleIcon,
  ServerIcon,
  ShieldIcon,
  StarIcon,
  SwordsIcon,
  TimerIcon,
  TrendingUpIcon,
  UnplugIcon,
  ZapIcon,
} from "lucide-react";
import FullBleed from "../layout/FullBleed.astro";
import Section from "../layout/Section.astro";

const ITEMS = [
  {
    Icon: BrainCircuitIcon,
    title: "Designed for developers",
    description:
      "The Kilpi API is designed to be intuitive to read and learn, fast to write and expressive of the developer's intent.",
  },
  {
    Icon: ParenthesesIcon,
    title: "Policies as functions",
    description:
      "Not only are policies versionable, but simply functions with the full power of TypeScript.",
  },
  {
    Icon: UnplugIcon,
    title: "Works with everything",
    description:
      "Kilpi works with any TS / JS runtime, library or framework, any authentication provider.",
  },
  {
    Icon: ComponentIcon,
    title: "Authorization components",
    description:
      "First-class support for frameworks with plugins that provide hooks and components to authorize your UI.",
  },
  {
    Icon: BicepsFlexedIcon,
    title: "Flexible authorization model",
    description:
      "The Kilpi model can implement DAC, MAC, ABAC, RBAC, ReBAC, EBAC, ROBAC and many more models.",
  },
  {
    Icon: PuzzleIcon,
    title: "Protected queries",
    description:
      "Authorizing reads or redacting data can be a surprisingly complex issue without a good tool such as Kilpi.",
  },
  {
    Icon: ServerIcon,
    title: "Server-first authorization",
    description:
      "All authorization decisions are made on the server side, ensuring security and compliance.",
  },
  {
    Icon: LaptopIcon,
    title: "Type-safe authorization client",
    description:
      "Infer the types and query authorization decisions on the client using a tRPC inspired client.",
  },
  {
    Icon: BlocksIcon,
    title: "Extensions with plugins",
    description: "Extend Kilpi with ready-made or custom plugins to fit your use case.",
  },
  {
    Icon: ShieldIcon,
    title: "Type-safety at 100%",
    description: "Autocomplete everything — Kilpi is designed to the highest TypeScript standards.",
  },
  {
    Icon: ZapIcon,
    title: "High performance",
    description:
      "Not only does Kilpi add no overhead, it can even improve your authorization performance.",
  },
  {
    Icon: SwordsIcon,
    title: "Battle tested and secure",
    description:
      "Production-ready, tested and secure authorization layer trusted in real-world applications.",
  },
  {
    Icon: TimerIcon,
    title: "Fast installation",
    description: "Install the package and protect your first feature in minutes.",
  },
  {
    Icon: TrendingUpIcon,
    title: "Gradually adoptible",
    description: "Start using policy by policy, feature by feature.",
  },
  {
    Icon: StarIcon,
    title: "Open source",
    description:
      "Ditch authorization-as-a-service and vendor lock-in — Kilpi is free and open source.",
  },
];
---

<FullBleed>
  <Section id="features" class="py-32 flex flex-col gap-24">
    <div class="flex flex-col gap-4 max-w-xl">
      <h2 class="text-4xl font-bold tracking-tight">
        Your authorization layer with everything your need.
      </h2>

      <p class="text-muted-fg">
        Designed to solve real problems for real applications, Kilpi was born after trying to solve
        the same problem time after time, in project after project.
      </p>
    </div>

    <div
      class="grid gap-8"
      style={{ gridTemplateColumns: "repeat(auto-fill, minmax(320px, 1fr))" }}
    >
      {
        ITEMS.map((item, index) => {
          const hue = (index / ITEMS.length) * 360;
          return (
            <div class="space-y-2 max-w-md">
              <div
                class="size-12 flex items-center justify-center rounded-xl"
                style={{
                  backgroundColor: `oklch(97% 0.067 ${hue})`,
                  color: `oklch(60% 0.219 ${hue})`,
                }}
              >
                <item.Icon />
              </div>
              <h2 class="text-2xl font-bold tracking-tight text-balance">{item.title}</h2>
              <p class="text-balance opacity-70">{item.description}</p>
            </div>
          );
        })
      }
    </div>

    <h2 class="text-center text-muted-fg text-2xl font-bold tracking-tight text-balance">
      And so much more...
    </h2>
  </Section>
</FullBleed>
