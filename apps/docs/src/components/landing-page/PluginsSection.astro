---
import { ScanSearchIcon, ToyBrickIcon } from "lucide-react";
import Section from "../layout/Section.astro";
import { SvgLogos } from "../ui/SvgLogos";

export const CATEGORIES = [
  {
    title: "Frameworks",
    description: "Adapt your UI to your authorization policies.",
    items: [
      {
        title: "React Server Components",
        description: "The <Authorize /> component and more features.",
        Icon: SvgLogos.React,
        link: "/docs/plugins/react-server",
      },
      {
        title: "React Client",
        description: "Client bindings with <AuthorizeClient /> and useAuthorize()",
        Icon: SvgLogos.React,
        link: "/docs/plugins/react-client",
      },
    ],
  },
  {
    title: "Utilities",
    description: "Plugins to extend the features of Kilpi.",
    items: [
      {
        title: "Audit Plugin",
        description: "Collect your authorization decisions for auditing.",
        Icon: ScanSearchIcon,
        link: "/docs/plugins/audit",
      },
      {
        title: "Endpoint Plugin",
        description:
          "Automatically construct an API endpoint for fetching the current subject and authorization decisions.",
        Icon: ToyBrickIcon,
        link: "/docs/plugins/endpoint",
      },
    ],
  },
];
---

<Section id="plugins" class="py-32">
  <h2 class="text-3xl font-bold tracking-tight sm:text-4xl">Plugins to fit your use case</h2>

  {
    CATEGORIES.map((category) => (
      <div class="flex flex-col gap-4">
        <div class="flex flex-col gap-1">
          <h3 class="text-xl font-semibold">{category.title}</h3>
          <p class="text-muted-fg">{category.description}</p>
        </div>

        <div
          class="flex flex-col sm:grid grid-cols-1 gap-4"
          style={{
            gridTemplateColumns: "repeat(auto-fill, minmax(260px, 1fr))",
          }}
        >
          {category.items.map((item) => (
            <a
              class="flex flex-col gap-2 rounded-lg border bg-card p-4 shadow-lg shadow-fg/5"
              href={item.link}
            >
              <div class="flex items-center gap-2">
                {!item.Icon ? null : typeof item.Icon === "string" ? (
                  <img src={item.Icon} class="size-4" alt={item.title} />
                ) : (
                  <item.Icon className="size-4 text-muted-fg" />
                )}
                <p class="font-semibold">{item.title}</p>
              </div>
              {item.description && <p class="text-muted-fg text-sm">{item.description}</p>}
            </a>
          ))}
          <div class="flex flex-col bg-muted-bg justify-center items-center gap-2 rounded-lg p-4 text-muted-fg">
            And more to come...
          </div>
        </div>
      </div>
    ))
  }
</Section>
